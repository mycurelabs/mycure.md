name: Deploy:Staging:Heroku

on: 
  push:
    branches:
      - environment/staging-heroku

jobs:
  deploy_to_staging_heroku:
    name: Deploy to staging heroku
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [10]
    steps: 
      - uses: actions/checkout@master
      - uses: akhileshns/heroku-deploy@v3.0.4 # This is the action
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: staging-web-main
          heroku_email: caretheextramile@gmail.com
          buildpack: "" #OPTIONAL
          branch: environment/staging-heroku #OPTIONAL and DEFAULT - 'HEAD' (a.k.a your current branch)
          dontuseforce: false #OPTIONAL and DEFAULT - false
          usedocker: false #OPTIONAL and DEFAULT - false
          appdir: "" #OPTIONAL and DEFAULT - "". This is useful if the api you're deploying is in a subfolder
          docker_heroku_process_type: "" #OPTIONAL and DEFAULT - "web"
      # - uses: actions/setup-node@v1
      #   with:
      #     node-version: ${{ matrix.node }}
      # - name: Install Yarn
      #   run: npm install yarn@latest -g
      # - name: Install Firebase Tools
      #   run: npm install firebase-tools -g
      # - name: Install dependencies
      #   run: yarn
      # - name: Run build
      #   env: 
      #     API_URL: ${{ secrets.STAGING_API_URL }}
      #     CMS_URL: ${{ secrets.STAGING_CMS_URL }}
      #     ENV: ${{ secrets.STAGING_ENV }}
      #     GA_ID: ${{ secrets.STAGING_GA_ID }}
      #     IPSTACK_API_KEY: ${{ secrets.STAGING_IPSTACK_API_KEY }}
      #     IPSTACK_API: ${{ secrets.STAGING_IPSTACK_API }}
      #     PX_PORTAL_URL: ${{ secrets.STAGING_PX_PORTAL_URL }}
      #     SIGNIN_URL: ${{ secrets.STAGING_SIGNIN_URL }}
      #     STRIPE_CHECKOUT_CANCEL_URL: ${{ secrets.STAGING_STRIPE_CHECKOUT_CANCEL_URL }}
      #     STRIPE_CHECKOUT_SUCCESS_URL: ${{ secrets.STAGING_STRIPE_CHECKOUT_SUCCESS_URL }}
      #     STRIPE_PK: ${{ secrets.STAGING_STRIPE_PK }}
      #   run: yarn generate
      # - name: Run deploy
      #   env: 
      #     FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      #   run: |
      #     firebase use mc-v4-stg
      #     firebase target:clear hosting staging
      #     firebase target:apply hosting staging staging-web-main
      #     yarn deploy:stg